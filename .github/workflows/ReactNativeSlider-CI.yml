name: ReactNativeSlider-CI

on: [push]

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore all the packages
        run: npm install

      - name: Cache
        uses: actions/cache@v3.0.5
        with:
          path: ./package/node_modules
          key: ${{ hashFiles('./package/package.json') }}


  lint:
    name: Lint the sources
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull npm dependencies
        uses: actions/cache@v3.0.5
        with:
          path: ./package/node_modules
          key: ${{ hashFiles('./package/package.json') }}

      - name: Run ESLint on the sources
        run: cd package && npx eslint src


  test:
    name: Run the unit tests
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Pull npm dependencies
        uses: actions/cache@v3.0.5
        with:
          path: ./package/node_modules
          key: ${{ hashFiles('./package/package.json') }}

      - name: Run unit tests
        run: cd package && npx jest src


  verify:
    name: Verify the Example app sources
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Run ESLint on the sources
        run: cd example && npx eslint .


  build-android-app:
    name: Verify the package and example app builds for Android platform
    runs-on: ubuntu-latest
    needs: [verify]

    steps:
      - uses: actions/checkout@v3

      - name: Pull the npm dependencies
        run: npm install

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Build the Android OS app
        run: cd example/android && ./gradlew assembleDebug


  build-iOS-app:
    name: Verify the package and example app builds for iOS platform
    runs-on: macos-latest
    needs: [verify]
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cached-ios-deps
        with:
          path: |
            example/node_modules
            example/ios/Pods
          key: ${{ hashFiles('./example/package-lock.json') }}-${{ hashFiles('./package/package-lock.json') }}-${{ hashFiles('./example/ios/Podfile.lock') }}

      - name: Install required dependencies on cache miss
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: |
          npm install
          cd example/ios && pod install --verbose

      - name: Use the current package sources in build
        run: cd example && npm run refresh-package

      - name: Opening Simulator app
        uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 12 mini'

      - name: Builds the iOS app
        run: cd example && npx react-native run-ios


  build-Windows-app:
    name: Verify the package and example app builds for Windows platform
    runs-on: windows-latest
    needs: [verify]
    steps:
      - name: Ensure the cross-platform Git on Windows
        run: git config --global core.autocrlf false

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build the Windows OS app
        run: cd example; npx react-native run-windows --arch x64 --no-launch --no-deploy --logging
